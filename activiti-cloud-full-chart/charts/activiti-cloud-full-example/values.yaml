# Default values for activiti-cloud-full-example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## i.e Jx environment
# expose: 
#   config:
#     domain: &domain "1.2.3.4.nip.io"
#     http: &http true

global:
  ## Configure pull secrets for all deployments
  registryPullSecrets: []

  # Use Yaml formatted string to add extra environment properties to all deployments, i.e.
  extraEnv: |
    # - name: SERVER_USEFORWARDHEADERS
    #   value: "true"
    # - name: SERVER_TOMCAT_INTERNALPROXIES
    #   value: ".*"
    # - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
    #   value: "*"

  keycloak:
    ## Configure Activiti Keycloak host template, i.e. "activiti-keycloak.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    #host: '{{ template "common.gateway-host" . }}'
    host: 'identity.{{ .Release.Namespace }}.{{ template "common.gateway-domain" . }}'

    ## Set full url to configure external Keycloak, https://my.keycloak.com/auth
    # if not set, keycloak deployment is automatically exposed on gaetway host, i.e. http://activiti-cloud-gateway.REPLACEME/auth
    url: ""

    ## Configure Keycloak realm
    realm: "activiti"
    resource: "activiti"
    client: "activiti"

    ## Use Yaml formatted string to add keycloak properties to deployments
    extraEnv: |
      # - name: KEYCLOAK_USERESOURCEROLEMAPPINGS
      #   value: "false" 

  gateway:
    ## Set to configure single domain name for all services, i.e. "activiti-cloud-gateway.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: 'gateway.{{ .Release.Namespace }}.{{ template "common.gateway-domain" . }}'

    ## Set to false enables HTTPS configuration on all urls 
    http: "true"

    ## Set to enable automatic TLS for ingress if https is enabled
    tlsacme: "false"

    ## Set to configure gateway domain template, i.e. {{ .Release.Namespace }}.1.3.4.5.nip.io
    #  helm upgrade activiti . --install --set global.gateway.domain=1.2.3.4.nip.io
    domain: "REPLACEME"

    ## Configure global annotations for all service ingresses, i.e. 
    annotations:
      certmanager.k8s.io/issuer: letsencrypt-prod

    ## Or simply enable templated domain host coniguration in Jx environment
    # host: "activiti-cloud-gateway.{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    # domain: *domain ## Sync with Jx expose controller domain conig 
    # http: *http ## Sync with Jx expose controller http conig
    # tlsacme: *tlsacme ## Sync with Jx expose controller tlsacme conig


activiti-cloud-modeling:
  enabled: true
  service:
    name: modeling
  frontend:
    image:
      repository: activiti/activiti-modeling-app
      #tag: 7.1.0.M4
      pullPolicy: Always
  backend:
    image:
      repository: activiti/activiti-cloud-modeling
      #tag: 7.1.0.M4
      pullPolicy: Always

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
    frontend:
      basepath: "/modeling"
      annotations: {}
    backend:
      prefix: "modeling-service"
      image:
      annotations: {}


runtime-bundle:
  enabled: true
  ingress:
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/cors-allow-header: X-Forwarded-For, X-Forwarded-Proto,
        X-Forwarded-Port, X-Forwarded-Prefix, Authorization, Content-Type, Accept
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /$1
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
    enabled: true
    path: /rb/?(.*)

  service:
    name: rb
  image:
    pullPolicy: Always
    repository: activiti/example-runtime-bundle
    #tag: 7.1.0.M4

activiti-cloud-query:
  service:
    name: query
  image:
    pullPolicy: Always
    repository: activiti/activiti-cloud-query
    #tag: 7.1.0.M4
  postgres:
    enabled: true

activiti-cloud-connector:
  enabled: true
  service:
    name: example-cloud-connector
  image:
    pullPolicy: Always
    repository: activiti/example-cloud-connector
    #tag: 7.1.0.M4

activiti-cloud-identity:
  enabled: true

postgres:
  enabled: true
  postgresqlPassword: password
  resources:
    requests:
      cpu: 350m
      memory: 512Mi

rabbitmq:
  enabled: true
  service:
    clusterIP: None
  persistentVolume:
    enabled: true
  rabbitmqUsername: "guest"
  rabbitmqPassword: "guest"
  rabbitmqErlangCookie: 124567890abcdefghijklmnopqrstuv
  resources:
    requests:
      cpu: 350m
      memory: 512Mi
  rbac:
    create: true
  replicaCount: 1
  ingress:
    enabled: false
    #    hostName: "rabbitmq.jx-staging.X.X.X.X.nip.io"
    path: /
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: "*"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: "true"
