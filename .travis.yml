import:
  - source: Activiti/activiti-scripts:.travis.java.yml@master
  - source: Activiti/activiti-scripts:.travis.maven-s3-config.yml@master
  - source: Alfresco/alfresco-build-tools:.travis.awscli_install.yml@v1.0.0
  - source: Alfresco/alfresco-build-tools:.travis.helm_install.yml@v1.0.0
  - source: Alfresco/alfresco-build-tools:.travis.docker_login.yml@v1.0.0
  - source: Alfresco/alfresco-build-tools:.travis.kubernetes_config.yml@v1.0.0
  - source: Alfresco/alfresco-build-tools:.travis.kubernetes_install.yml@v1.0.0
  - source: Alfresco/alfresco-build-tools:.travis.yq_install.yml@v1.0.0
  - source: Alfresco/alfresco-build-tools:.travis.pre-commit.yml@v1.0.0

cache:
  directories:
    - "${HOME}/.m2/repository"

addons:
  apt:
    sources:
      - sourceline: 'deb https://cli.github.com/packages stable main'
        key_url: 'http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xC99B11DEB97541F0'
    packages:
      - gh

env:
  global:
    - ORG='activiti'
    - APP_NAME='activiti-cloud-dependencies'
    - GITHUB_CHARTS_REPO="https://${GITHUB_TOKEN}@github.com/Activiti/activiti-cloud-helm-charts.git"
    - RELEASE_BRANCH="develop"
    - TRAVIS_WAIT_TIMEOUT=${TRAVIS_WAIT_TIMEOUT:-180}

before_script:
  - echo -e "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com" >>  ~/.git-credentials
  - kubectl get ns || travis_terminate 1

stages:
  - name: docker
  - name: test
  - name: publish
    if: type != pull_request
  - name: promote
    if: type != pull_request

install: skip

jobs:
  include:
    - name: Build Example Runtime Bundle
      stage: docker
      script: make docker/example-runtime-bundle

    - name: Build Activity Cloud Query
      stage: docker
      script: make docker/activiti-cloud-query

    - name: Build Example Cloud Connector
      stage: docker
      script: make docker/example-cloud-connector

    - name: Build Activiti Cloud Modeling
      stage: docker
      script: make docker/activiti-cloud-modeling

    - name: Run Acceptance Tests
      stage: test
      after_script: make delete || echo "Trying to delete helm chart"
      script: |
        (
          set -e

          # override here as values have changed to be https friendly from dot to dash
          export GATEWAY_HOST=gateway-$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN
          export SSO_HOST=identity-$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN

          make install

          attempt_counter=0
          max_attempts=50
          echo "Waiting for services to be up..."
          until curl --silent --head --fail $GATEWAY_HOST/modeling-service/actuator/health > /dev/null 2>&1 &&
                curl --silent --head --fail $GATEWAY_HOST/rb/actuator/health > /dev/null 2>&1 &&
                curl --silent --head --fail $GATEWAY_HOST/query/actuator/health > /dev/null 2>&1; do

            if [ ${attempt_counter} -eq ${max_attempts} ]; then
              echo "Max attempts reached"
              break
            fi

            printf '.'
            attempt_counter=$((attempt_counter+1))
            sleep 5
          done

          kubectl get all -n ${PREVIEW_NAMESPACE}

          make test/modeling-acceptance-tests
          make test/runtime-acceptance-tests
        )

    # for testing this, should be on promote
    - name: Test Promote PR
      stage: test
      branches:
        only:
          - fix-modeling
      script: make create-pr

    - name: Promote Release
      stage: promote
      branches:
        only:
          - develop
      script: make promote

before_install:
  - echo -e "https://$GITHUB_USER:$GITHUB_TOKEN@github.com" >>  ~/.git-credentials
  - export ACTIVITI_CLOUD_VERSION=$(python -c "from xml.etree.ElementTree import parse; print(parse(open('activiti-cloud-dependencies/pom.xml')).find('.//{http://maven.apache.org/POM/4.0.0}activiti-cloud.version').text)")
  - echo ACTIVITI_CLOUD_VERSION=${ACTIVITI_CLOUD_VERSION}

notifications:
  slack:
    secure: J/ilLqmqXD7/4VpZZ3HxFrp5Ae6zJJuo6KjsxP5MN4kTxUhfAJvbrfoZfVioxsBX/qXGx/ckvq1WCzen13N+UrWcL+SiXBf9sTsiB4oB2O4mNV8COUAJThJxHvG6w1YFUYIFePD7s9Y6c+4idL5mLfzdthuzBcwn4lHM64iYcWFXqnOR0dJvChzZnbyrLYhOp5MJq9knDdiemKMNU7TI4sa+FTx4Uxj89/f0qKlw7Wd3cuvf1uSPOof+wy2r5ujPz3c5bvecXURcNUc2GLhNAv4TWMNrfY6jQCoCNC9pdmWHm2qcQjXmVqrM75527rOap9wuh1ZSk+fsh/ExiCUWMROB7An1I7Nqy0AdtjUXctuj0kGcjTyKEvVrUg8Eb0DLmFGANcmNvv28JTTokyM2AWx+Jma5ilDnNVZV1TCv++npFGaTMRSP9f3U3IKYDFzHdkjDRifvpQCrpp1Wj+RaGg8r1dRSyfG/3QoAGJ9CwlM1NxJY9SL7aR+aRLgQHSmdsWZWN+LL6ivLgu2OABjInZHDlzwLtDg1nHupbaxAb1lzxGPik52X5rZEkxUHiLHmCnyI94Yvf0L+jvM/Dko+ETGrTj4e1Qayv6ZxSU8ULsOV8gDeBcK5woaCTJsAzXvohz4vKl1YhZ5WP6vISz7sj/WetaPQyaBOLhfQnz+8O5k=
