import: Activiti/activiti-scripts:.travis.java.yml@master
env:
  global:
    - ORG='activiti'
    - APP_NAME='activiti-cloud-dependencies'
    - PREVIEW_NAMESPACE="example-$TRAVIS_BRANCH-$TRAVIS_BUILD_NUMBER";  
    - GLOBAL_GATEWAY_DOMAIN="35.228.195.195.nip.io"
    - REALM="activiti"
    - GATEWAY_HOST="gateway.$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN"
    - SSO_HOST="identity.$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN"
    - GITHUB_CHARTS_REPO="https://${GITHUB_TOKEN}@github.com/Activiti/activiti-cloud-helm-charts.git"
    - RELEASE_BRANCH="develop"
    - RELEASE_TAG_REGEX="*M*"
    - HELM_VERSION=2.12.3
    - HELM_REPO_BASE_URL=https://kubernetes-charts.alfresco.com
    - HELM_REPO=stable
    - KUBERNETES_VERSION=1.14.8
    - TRAVIS_WAIT_TIMEOUT=${TRAVIS_WAIT_TIMEOUT:-120}
    
before_script: |
  echo -e "https://almerico:$GITHUB_TOKEN@github.com" >>  ~/.git-credentials
   
  curl -s https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz | tar zx
  sudo mv linux-amd64/helm /usr/local/bin/
  curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/amd64/kubectl &&
  chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  kubectl config set-cluster default-cluster --server=${K8S_API_URL} &&
  kubectl config set-credentials default-admin --token=${K8S_API_TOKEN} &&
  kubectl config set-context default-system --cluster=default-cluster --user=default-admin &&
  kubectl config use-context default-system

install: true

jobs: 
  include:
    - name: build jars
      stage: build
      script: |
        echo almer VERSION=${VERSION}
        travis_wait ${TRAVIS_WAIT_TIMEOUT} ${MAVEN_CMD}  -f example-runtime-bundle/pom.xml
        travis_wait ${TRAVIS_WAIT_TIMEOUT} ${MAVEN_CMD}  -f activiti-cloud-query/pom.xml
        travis_wait ${TRAVIS_WAIT_TIMEOUT} ${MAVEN_CMD}  -f example-cloud-connector/pom.xml
        travis_wait ${TRAVIS_WAIT_TIMEOUT} ${MAVEN_CMD}  -f activiti-cloud-modeling/pom.xml
        
        travis_wait ${TRAVIS_WAIT_TIMEOUT} ${MAVEN_CMD} -DskipITs -DskipTests -f  activiti-cloud-acceptance-scenarios/pom.xml 
        travis_wait ${TRAVIS_WAIT_TIMEOUT} ${MAVEN_CMD}  -f activiti-cloud-dependencies/pom.xml
        
        docker build -f activiti-cloud-query/Dockerfile -q -t docker.io/activiti/activiti-cloud-query:$(cat VERSION) activiti-cloud-query
        docker build -f example-cloud-connector/Dockerfile -q -t docker.io/activiti/example-cloud-connector:$(cat VERSION) example-cloud-connector
        docker build -f example-runtime-bundle/Dockerfile -q -t docker.io/activiti/example-runtime-bundle:$(cat VERSION) example-runtime-bundle
        docker build -f activiti-cloud-modeling/Dockerfile -q -t docker.io/activiti/activiti-cloud-modeling:$(cat VERSION) activiti-cloud-modeling
        
        docker push docker.io/activiti/activiti-cloud-query:$(cat VERSION)
        docker push docker.io/activiti/example-runtime-bundle:$(cat VERSION)
        docker push docker.io/activiti/activiti-cloud-query:$(cat VERSION)
        docker push docker.io/activiti/activiti-cloud-modeling:$(cat VERSION)
        
        make create-helm-charts-release-and-upload
        
        cd activiti-cloud-dependencies
        travis_wait ${TRAVIS_WAIT_TIMEOUT} mvn -q versions:set -Droot.log.level=off -DnewVersion=${VERSION} 
        
        make updatebot/push-version-dry
        make prepare-helm-chart
        travis_wait ${TRAVIS_WAIT_TIMEOUT} make run-helm-chart
        travis_wait ${TRAVIS_WAIT_TIMEOUT} make activiti-cloud-acceptance-scenarios
        travis_wait ${TRAVIS_WAIT_TIMEOUT} make modeling-acceptance-tests
        travis_wait ${TRAVIS_WAIT_TIMEOUT} make runtime-acceptance-tests
        make delete|| travis_terminate 1;
  
    - name: Create a tag
      stage: tag
      script: |
        mvn versions:set -q -DnewVersion=$(cat VERSION)
        git add --all
        git commit -m "Release $(cat VERSION)" --allow-empty
        git tag -fa v$(cat VERSION) -m "Release version $(cat VERSION)"|| travis_terminate 1;
        git push -f -q https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git v$(cat VERSION)|| travis_terminate 1;
    
before_install:
  - echo -e "https://$GITHUB_USER:$GITHUB_TOKEN@github.com" >>  ~/.git-credentials
#  - source ./build.properties
  - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin "$DOCKER_REGISTRY"
  - curl -sSL https://download.sourceclear.com/ci.sh | CACHE_DIR=${HOME}/sourceclear 
