name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  GLOBAL_GATEWAY_DOMAIN: activiti.envalfresco.com

jobs:

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0

  build:
    runs-on: ubuntu-18.04
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Java JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # step required for https://github.com/nektos/act/issues/161 to run locally with https://github.com/nektos/act
      - name: Set up Maven
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install -y libfontconfig1
          curl -fsSL https://www-eu.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \
            | tar xz -C /usr/share
          ln -s /usr/share/apache-maven-$MAVEN_VERSION/bin/mvn /usr/bin/mvn
        env:
          MAVEN_VERSION: 3.6.3

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure Maven
        run: |
          echo "MAVEN_USERNAME=$MAVEN_USERNAME" >> $GITHUB_ENV
          echo "MAVEN_PASSWORD=$MAVEN_PASSWORD" >> $GITHUB_ENV
          echo "MAVEN_OPTS='-s settings.xml -B -ntp'" >> $GITHUB_ENV
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up jx-release-version
        if: ${{ github.event_name == 'push' }}
        run: |
          curl -fsSL https://github.com/jenkins-x-plugins/jx-release-version/releases/download/v$JX_RELEASE_VERSION_VERSION/jx-release-version-linux-amd64.tar.gz \
            | tar xz jx-release-version
          sudo mv jx-release-version /usr/local/bin/
          echo jx-release-version $(jx-release-version --version)
        env:
          JX_RELEASE_VERSION_VERSION: 2.2.3

      - name: Bump version with jx-release-version
        if: ${{ github.event_name == 'push' }}
        run: |
          git fetch --tags -q
          echo $(jx-release-version) > VERSION

      - name: Set BRANCH_NAME env variable
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF#refs/heads/}
          BRANCH_NAME=$(echo ${BRANCH_NAME/\//-} | tr '[:upper:]' '[:lower:] }
          echo set BRANCH_NAME=$BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Set preview version
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo 0.0.1-$BRANCH_NAME-$GITHUB_RUN_NUMBER-SNAPSHOT > VERSION

      - name: Set PREVIEW_NAMESPACE env variable
        if: ${{ github.event_name == 'pull_request' && contains(github.head_ref, 'preview') }}
        run: |
          PREVIEW_NAMESPACE=$BRANCH_NAME-$GITHUB_RUN_NUMBER
          echo set PREVIEW_NAMESPACE=$PREVIEW_NAMESPACE
          echo "PREVIEW_NAMESPACE=$PREVIEW_NAMESPACE" >> $GITHUB_ENV

      - name: Set VERSION env variable
        run: |
          VERSION=$(cat VERSION)
          echo set VERSION=$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Example Runtime Bundle
        run: make docker/example-runtime-bundle

      - name: Build Activity Cloud Query
        run: make mvn/activiti-cloud-query/liquibase docker/activiti-cloud-query

      - name: Build Example Cloud Connector
        run: make docker/example-cloud-connector

      - name: Build Activiti Cloud Modeling
        run: make mvn/activiti-cloud-modeling/liquibase docker/activiti-cloud-modeling

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.2

      - name: Run Acceptance Tests
        run: |
          set -e

          # override here as values have changed to be https friendly from dot to dash
          export SSO_PROTOCOL=https
          export GATEWAY_PROTOCOL=https
          export GATEWAY_HOST=gateway-$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN
          export SSO_HOST=identity-$PREVIEW_NAMESPACE.$GLOBAL_GATEWAY_DOMAIN

          make install

          attempt_counter=0
          max_attempts=50
          echo "Waiting for services to be up..."
          until \
            curl --silent --head --fail $GATEWAY_HOST/modeling-service/actuator/health > /dev/null 2>&1 && \
            curl --silent --head --fail $GATEWAY_HOST/rb/actuator/health > /dev/null 2>&1 && \
            curl --silent --head --fail $GATEWAY_HOST/query/actuator/health > /dev/null 2>&1
          do
            if [ ${attempt_counter} -eq ${max_attempts} ]
            then
              echo "Max attempts reached"
              break
            fi

            printf '.'
            attempt_counter=$((attempt_counter+1))
            sleep 5
          done

          kubectl get all -n $PREVIEW_NAMESPACE

          make test/modeling-acceptance-tests
          make test/runtime-acceptance-tests

      - name: Delete Helm chart
        if: ${{ always() }}
        run: make delete

      - name: Delete Docker images
        if: ${{ github.event_name == 'pull_request' && always() }}
        run: make docker-delete-all

      - name: Deploy with Maven
        if: ${{ github.event_name == 'push' || contains(github.head_ref, 'preview') }}
        run: |
          mvn versions:set -DnewVersion=$VERSION -DprocessAllModules=true -DgenerateBackupPoms=false
          mvn deploy -DskipTests
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Configure git user
        if: ${{ github.event_name == 'push' }}
        run: |
          git config --global user.name $GITHUB_USERNAME
          git config --global user.email $GITHUB_USERNAME@users.noreply.github.com
        env:
          GITHUB_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}

      - name: Set up updatebot
        if: ${{ github.event_name == 'push' }}
        run: |
          curl -fsSLo updatebot.jar \
            https://repo1.maven.org/maven2/io/jenkins/updatebot/updatebot/$UPDATEBOT_VERSION/updatebot-$UPDATEBOT_VERSION.jar
          echo "java -jar /usr/local/bin/updatebot.jar \$@" > updatebot
          chmod +x updatebot
          sudo mv updatebot* /usr/local/bin/
          echo updatebot $(updatebot version)
        env:
          UPDATEBOT_VERSION: 1.1.60

      - name: Set up helm-docs
        if: ${{ github.event_name == 'push' }}
        run: |
          curl -fsSL https://github.com/norwoodj/helm-docs/releases/download/v$HELM_DOCS_VERSION/helm-docs_${HELM_DOCS_VERSION}_linux_x86_64.tar.gz \
            | tar xz helm-docs
          sudo mv helm-docs /usr/local/bin/
          helm-docs --version
        env:
          HELM_DOCS_VERSION: 1.4.0

      - name: Set up yq
        if: ${{ github.event_name == 'push' }}
        run: |
          curl -fsSLo yq https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_$(uname | tr '[:upper:]' '[:lower:]')_amd64
          chmod +x yq
          sudo mv yq /usr/local/bin/
          yq --version
        env:
          YQ_VERSION: 3.4.1

      - name: Promote Release
        if: ${{ github.event_name == 'push' }}
        run: make promote
        env:
          GITHUB_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

      - name: Deploy preview
        if: ${{ github.event_name == 'pull_request' && contains(github.head_ref, 'preview') }}
        run: |
          mvn versions:set -DnewVersion=$VERSION -DprocessAllModules=true -DgenerateBackupPoms=false
          mvn deploy -pl activiti-cloud-dependencies/dependencies -am -DskipTests
