server.port=8080
spring.application.name=example-connector

spring.cloud.stream.function.autodetect=false
spring.cloud.function.definition=exampleConnectorConsumer;\
  headersConnectorRouter;\
  headersConnectorConsumer;\
  moviesDescriptionConsumer;\
  miCloudConnectorConsumer;\
  testBpmnErrorConnectorConsumer;\
  testErrorConnectorConsumer

#spring.cloud.stream.function.routing.enabled=true

spring.cloud.stream.bindings.exampleConnectorConsumer-in-0.destination=ExampleConnector
spring.cloud.stream.bindings.exampleConnectorConsumer-in-0.contentType=application/json
spring.cloud.stream.bindings.exampleConnectorConsumer-in-0.group=${spring.application.name}

spring.cloud.stream.bindings.moviesDescriptionConsumer-in-0.destination=Movies.getMovieDesc
spring.cloud.stream.bindings.moviesDescriptionConsumer-in-0.contentType=application/json
spring.cloud.stream.bindings.moviesDescriptionConsumer-in-0.group=${spring.application.name}

spring.cloud.stream.bindings.headersConnectorRouter-in-0.destination=headers.GET
spring.cloud.stream.bindings.headersConnectorRouter-in-0.group=${spring.application.name}
spring.cloud.stream.bindings.headersConnectorRouter-in-0.contentType=application/json

spring.cloud.stream.bindings.headersConnectorConsumer-in-0.destination=null
spring.cloud.stream.bindings.headersConnectorConsumer-in-0.group=${spring.application.name}
spring.cloud.stream.bindings.headersConnectorConsumer-in-0.contentType=application/json

spring.cloud.stream.bindings.miCloudConnectorConsumer-in-0.destination=miCloudConnector
spring.cloud.stream.bindings.miCloudConnectorConsumer-in-0.group=${spring.application.name}
spring.cloud.stream.bindings.miCloudConnectorConsumer-in-0.contentType=application/json

spring.cloud.stream.bindings.testErrorConnectorConsumer-in-0.destination=test-error-connector.throwError
spring.cloud.stream.bindings.testErrorConnectorConsumer-in-0.group=${spring.application.name}
spring.cloud.stream.bindings.testErrorConnectorConsumer-in-0.contentType=application/json

spring.cloud.stream.bindings.testBpmnErrorConnectorConsumer-in-0.destination=test-bpmn-error-connector.throwError
spring.cloud.stream.bindings.testBpmnErrorConnectorConsumer-in-0.group=${spring.application.name}
spring.cloud.stream.bindings.testBpmnErrorConnectorConsumer-in-0.contentType=application/json

authorizations.security-constraints[0].authRoles[0]=${ACT_KEYCLOAK_USER_ROLE:ACTIVITI_USER}
authorizations.security-constraints[0].securityCollections[0].patterns[0]=${ACT_KEYCLOAK_PATTERNS:/v1/*}
authorizations.security-constraints[1].authRoles[0]=${ACT_KEYCLOAK_ADMIN_ROLE:ACTIVITI_ADMIN}
authorizations.security-constraints[1].securityCollections[0].patterns[0]=/admin/*

spring.rabbitmq.host=${ACT_RABBITMQ_HOST:localhost}

logging.level.org.springframework.cloud.stream.binding=ERROR

activiti.cloud.application.name=default-app

# zipkin (set spring.zipkin.enabled to true to activate)
spring.zipkin.enabled=false
spring.zipkin.base-url=http://zipkin:80/
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1.0
